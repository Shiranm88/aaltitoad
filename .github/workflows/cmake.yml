name: AALTITOAD CMake Pipeline

on: 
  pull_request:
    branches: 
      - master
  push:
    branches: 
      - master

env:
  BUILD_TYPE: Release
  GIT_SUBMODULE_STRATEGY: recursive
  CC: gcc-8
  CXX: g++-8

jobs:
  build-linux:
    if: ${{ false }}
    name: Build For Linux Systems

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Initialize Submodules
      uses: snickerbockers/submodules-init@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE -j$(nproc)

  build-windows:
    name: Build For MS Windows Systems
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup CygWin
        uses: egor-tensin/setup-cygwin@v3
        with:
          packages: flex bison

      - name: Install MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          cygwin: 1

      - name: Initialize Submodules
        uses: snickerbockers/submodules-init@v4

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE -j$(nproc)
